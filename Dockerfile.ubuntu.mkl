FROM ubuntu:22.04 AS build

ARG DEBIAN_FRONTEND=noninteractive

# Java
RUN \
  apt-get update && \
  apt-get -qy upgrade && \
  apt-get -qy install curl zip gnupg nano bash jq git build-essential perl ruby xsltproc openjdk-17-jdk && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/*

SHELL ["/bin/bash", "-ic"]

RUN \
  curl -Ls https://git.io/sbt > /usr/bin/sbt && \
  chmod 0755 /usr/bin/sbt

# Make source tree visible
COPY . /build

RUN \
  cd /build && \
  sbt stage


FROM ubuntu:22.04

ENV SERVER_HOME /opt/server

RUN \
  mkdir -p ${SERVER_HOME}/lib && \
  mkdir -p ${SERVER_HOME}/bin

RUN \
  apt update && apt upgrade -y && \
  apt install -y openjdk-17-jre

ENV JAVA_HOME /usr/lib/jvm/java-17-openjdk-amd64

RUN apt install -y libmkl-rt

RUN \
  update-alternatives --remove-all libblas.so.3-x86_64-linux-gnu && \
  update-alternatives --remove-all liblapack.so.3-x86_64-linux-gnu && \
  update-alternatives --install /usr/lib/x86_64-linux-gnu/libblas.so libblas.so /usr/lib/x86_64-linux-gnu/libmkl_rt.so 1000 && \
  update-alternatives --install /usr/lib/x86_64-linux-gnu/libblas.so.3 libblas.so.3 /usr/lib/x86_64-linux-gnu/libmkl_rt.so 1000 && \
  update-alternatives --install /usr/lib/x86_64-linux-gnu/liblapack.so liblapack.so /usr/lib/x86_64-linux-gnu/libmkl_rt.so 1000 && \
  update-alternatives --install /usr/lib/x86_64-linux-gnu/liblapack.so.3 liblapack.so.3 /usr/lib/x86_64-linux-gnu/libmkl_rt.so 1000


COPY --from=build /build/target/universal/stage/lib/* ${SERVER_HOME}/lib/

COPY docker/entrypoint.sh ${SERVER_HOME}/bin/

CMD [ "/opt/server/bin/entrypoint.sh" ]
