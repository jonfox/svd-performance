FROM topaztechnology/sbt-java11-build:11.0.13_1 AS build

# Make source tree visible
COPY . /build

RUN \
  cd /build && \
  sbt stage


FROM alpine:3.15.4
MAINTAINER Topaz Tech Ltd <info@topaz.technology>

ARG AZUL_VERSION=11.52.13
ARG JAVA_VERSION=11.0.13

ENV SERVER_HOME /opt/server
ENV IMAGE "Alpine"

RUN \
  mkdir -p ${SERVER_HOME}/lib && \
  mkdir -p ${SERVER_HOME}/bin

RUN \
  apk add --update --no-cache ca-certificates bind-tools curl bash jq && \
  apk add --update --no-cache java-cacerts java-common musl zlib && \
  wget --quiet "https://cdn.azul.com/zulu/bin/zulu${AZUL_VERSION}-ca-jre${JAVA_VERSION}-linux_musl_x64.tar.gz" -O /tmp/zulu.tar.gz && \
  tar zxvf /tmp/zulu.tar.gz -C /opt/server && \
  mv "/opt/server/zulu${AZUL_VERSION}-ca-jre${JAVA_VERSION}-linux_musl_x64/" /opt/server/jre/ && \
  rm /tmp/zulu.tar.gz

ENV JAVA_HOME=/opt/server/jre

# RUN apk add --update lapack // this doesn't perform well
RUN apk add --update openblas

RUN \
  ln -s /usr/lib/libopenblas.so.3 /usr/lib/libblas.so && \
  ln -s /usr/lib/libopenblas.so.3 /usr/lib/libblas.so.3 && \
  ln -s /usr/lib/libopenblas.so.3 /usr/lib/liblapack.so && \
  ln -s /usr/lib/libopenblas.so.3 /usr/lib/liblapack.so.3

COPY --from=build /build/target/universal/stage/lib/* ${SERVER_HOME}/lib/

COPY docker/entrypoint.sh ${SERVER_HOME}/bin/

CMD [ "/opt/server/bin/entrypoint.sh" ]
