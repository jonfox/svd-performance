FROM alpine:3.17.1 AS blas

ARG TARGETPLATFORM=linux/amd64

ARG OPENBLAS_VERSION=0.3.21

RUN \
  apk add --update --no-cache libgfortran && \
  apk add --update --no-cache --virtual build-dependencies build-base perl gfortran curl bash && \
  mkdir -p /tmp/build && \
  curl -Ls "https://github.com/xianyi/OpenBLAS/releases/download/v${OPENBLAS_VERSION}/OpenBLAS-${OPENBLAS_VERSION}.tar.gz" | tar zx --strip-components=1 -C /tmp/build && \
  bash -c $'\n\
  case "${TARGETPLATFORM}" in \n\
    "linux/amd64") \n\
      TARGET=NEHALEM \n\
      ;; \n\
    "linux/arm64") \n\
      TARGET=ARMV8 \n\
      ;; \n\
  esac \n\
  \n\
  OPENBLAS_FLAGS="USE_OPENMP=0 NO_LAPACK=0 MAJOR_VERSION=3 NO_AFFINITY=1 DYNAMIC_ARCH=1 USE_HEAP_ALLOC=1 TARGET=${TARGET}" \n\
  OPENBLAS_CFLAGS=-O2 \n\
  \n\
  make -C /tmp/build "${OPENBLAS_FLAGS}" PREFIX=/opt/openblas CFLAGS="${OPENBLAS_CFLAGS}" -j $(nproc) \n\
  make -C /tmp/build "${OPENBLAS_FLAGS}" PREFIX=/opt/openblas install \n\
  ' && \
  apk del build-dependencies && \
  rm -rf /tmp/build


FROM ubuntu:22.04 AS build

ARG DEBIAN_FRONTEND=noninteractive

# Java
RUN \
  apt-get update && \
  apt-get -qy upgrade && \
  apt-get -qy install curl zip gnupg nano bash jq git build-essential perl ruby xsltproc openjdk-17-jdk && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/*

SHELL ["/bin/bash", "-ic"]

RUN \
  curl -Ls https://git.io/sbt > /usr/bin/sbt && \
  chmod 0755 /usr/bin/sbt

# Make source tree visible
COPY . /build

RUN \
  cd /build && \
  sbt stage


FROM alpine:3.17.1

ENV SERVER_HOME /opt/server

RUN \
  mkdir -p ${SERVER_HOME}/lib && \
  mkdir -p ${SERVER_HOME}/bin

RUN apk add --update --no-cache ca-certificates bind-tools curl bash nano jq openjdk17-jre-headless

ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk

COPY --from=blas /opt/openblas/ /usr/
RUN \
  apk add --update --no-cache libgfortran && \
  ln -s /usr/lib/libopenblas.so /usr/lib/libblas.so && \
  ln -s /usr/lib/libopenblas.so /usr/lib/libblas.so.3 && \
  ln -s /usr/lib/libopenblas.so /usr/lib/liblapack.so && \
  ln -s /usr/lib/libopenblas.so /usr/lib/liblapack.so.3

COPY --from=build /build/target/universal/stage/lib/* ${SERVER_HOME}/lib/

COPY docker/entrypoint.sh ${SERVER_HOME}/bin/

CMD [ "/opt/server/bin/entrypoint.sh" ]
